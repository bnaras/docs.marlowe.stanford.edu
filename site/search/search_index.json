{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Marlowe!","text":"<p>Marlowe is a High Performance Computing (HPC) Cluster managed by Stanford Research Computing.</p> <p>It composes of an Nvidia DGX H100 Superpod, 2.5PB of DDN ExaScaler Lustre storage, and 3PB of DDN Intelliflash storage.</p> <p>With 11.1 PFlops of compute power, Marlowe would place 87th in the May 2024 top500 rankings.</p> <p>For more in-depth tech specs, refer to the Tech Specs page</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#i-receive-a-disk-quota-exceeded-error-when-writing-files-what-does-this-mean","title":"I receive a \"disk quota exceeded\" error when writing files. What does this mean?","text":"<p>Each filesystem on Marlowe has a user space quota. You're most likely to run into this issue when adding files to your home directory.</p>"},{"location":"faq/#i-cant-run-a-docker-container","title":"I can't run a docker container","text":"<p>Docker is not supported on Marlowe due to the security risks associated with it. Fortunately, Apptainer supports running docker containers natively.</p>"},{"location":"specs/","title":"Tech Specs","text":"<p>Marlowe consists of a DGX H100 Superpod.</p> <p>The Superpod is built out of 31 DGX H100 nodes.</p>"},{"location":"specs/#dgx-h100-specs","title":"DGX H100 Specs","text":"<p>Each DGX H100 has:</p> <ul> <li>2 x Intel Xeon Platinum 8480C</li> <li>8 x Nvidia H100 80GB</li> <li>2TB Memory</li> <li>400G NICs for fast data access</li> </ul>"},{"location":"getting-started/","title":"Getting Access","text":"<p>Once it's in production, Marlowe will require a review process to get access. The process to apply for an allocation on Marlowe is currently under development,  and will be published soon.</p> <p>Once that allocation is approved, a project will be created for you and you will be able to log in.</p>"},{"location":"getting-started/allocations/","title":"Allocations","text":"<p>To get access to Marlowe, you will need to be approved an allocation by the Marlowe Governance Group.</p>"},{"location":"getting-started/allocations/#applying-for-an-allocation","title":"Applying for an allocation","text":"<p>More info will be available soon.</p>"},{"location":"getting-started/connecting/","title":"Connecting","text":"<p>After your project has been approved, connecting is simple!</p>"},{"location":"getting-started/connecting/#ssh","title":"SSH","text":"<p>The login server you will need to ssh into is <code>login.marlowe.stanford.edu</code>. You will need to ssh in with your SUNet ID.</p> <p>So, if your SUNet ID was <code>bob</code>, your login command would look like:</p> <pre><code>ssh bob@login.marlowe.stanford.edu\n</code></pre> <p>You will be prompted to provide both your password and duo two-factor authentication credentials before it logs you in.</p>"},{"location":"getting-started/filesystems/","title":"User Filesystems","text":"<p>There are multiple filesystems available to end users on Marlowe.</p>"},{"location":"getting-started/filesystems/#users","title":"/users/","text":"<p><code>/users/</code> is where a user's home directory lives. It is directly mapped to the <code>$HOME</code> variable, so whenever you run <code>cd ~</code> or <code>cd $HOME</code> you will be sent to <code>/users/&lt;Your-sunet-ID&gt;</code>.</p> <p>For example, if my sunetID was <code>bob</code>, then my home directory on Marlowe would be <code>/users/bob</code></p> <p>Each directory in <code>/users/</code> is unique to that user.</p> <p><code>/users/</code> is backed up once every 24 hours.</p> <p>Important: Your home directory only has 15GB of storage available. For any large files or conda installs, we recommend using a different filesystem.</p>"},{"location":"getting-started/filesystems/#projects","title":"/projects/","text":"<p><code>/projects/</code> is the filesystem where all allocation project directories live.</p> <p>When you are given an allocation, you are given a project ID. This project ID is also your directory in <code>/projects/</code></p> <p>For example: If your allocation's project ID was <code>m231631</code>, then your allocation's project folder would be <code>/projects/m231631/</code></p> <p>Directory quotas in <code>/projects/</code> vary depending on the amount approved in the allocation.</p> <p>Every user added to an allocation shares the same <code>/projects/</code> folder. So <code>bob</code> and <code>amy</code> in project <code>m231631</code> would both have files in <code>/projects/m231631/</code>, but <code>greg</code> in project <code>m402630</code> would have files in <code>/projects/m402630</code></p> <p><code>/projects/</code> is backed up once every 24 hours.</p> <p>Important: Directories in <code>/projects/</code> are mounted as needed, so your specific folder may not show up when you login initially. <code>cd</code> to your project directory and it will show up until you log out.</p>"},{"location":"getting-started/filesystems/#scratch","title":"/scratch/","text":"<p><code>/scratch/</code> is the lustre filesystem meant (as the name implies) to be used as scratch storage.</p> <p>Much like in <code>/projects/</code>, your <code>/scratch/</code> folder corresponds to your project ID. <code>/scratch/m231631</code>,<code>/scratch/m402630</code>, etc.</p> <p><code>/scratch/</code> is not backed up. Unlike <code>/users/</code> and <code>/projects/</code>, <code>/scratch/</code> is not replicated.</p>"},{"location":"modules/","title":"Software","text":"<p>Marlowe has multiple software packages pre-installed and available for use. </p> <p>Most are installed as modules and can be listed by running <code>module avail</code> in your terminal</p> <p>Choose a page on the left to learn more about them.</p>"},{"location":"modules/apptainer/","title":"Apptainer","text":"<p>Apptainer (formerly known as Singularity) is an HPC-oriented container system. </p> <p>Unlike Docker, Apptainer is designed for use in HPC systems such as Marlowe. More info on Apptainer can be found here: https://apptainer.org/</p> <p>To load Apptainer:</p> <pre><code>module load apptainer\n</code></pre>"},{"location":"modules/apptainer/#apptainer-cache-directory","title":"Apptainer Cache Directory","text":"<p>By default, Apptainer stores all of a user's containers in their home directory.</p> <p>Since a user's home directory on Marlowe is only 15GB, that space can quickly be used up and the quota limit will block you from pulling and running containers.</p> <p>To get past this, you can set your Apptainer Cache directory to a different location. Learn more about the filesystems on Marlowe here.</p> <p>For instance, If you wanted set the apptainer cache directory to your <code>/scratch</code> directory and your project ID is <code>m223813</code>, you can run the following:</p> <pre><code>export APPTAINER_CACHEDIR=/scratch/m223813/apptainercache\n</code></pre> <p>After running the above command, all apptainer containers will be pulled to the <code>apptainercache</code> folder in your project's scratch directory.</p>"},{"location":"modules/conan/","title":"Conan","text":"<p>Conan is a C/C++ package manager.</p> <p>More info on Conan can be found here</p> <p>To load Conan, run the following:</p> <pre><code>module load conan\n</code></pre>"},{"location":"modules/conda/","title":"Conda","text":"<p>Conda is a python package manager used by a wide variety of projects.</p> <p>Marlowe uses an optimized version of Conda called Mamba.</p> <p>To load Mamba, run the following after logging in:</p> <pre><code>module load conda\n</code></pre> <p>Every conda command works with mamba. No code customization is needed.</p>"},{"location":"modules/conda/#installing-a-conda-environment-in-a-different-location","title":"Installing a Conda environment in a different location","text":"<p>Home directories have a quota of 15GB by default. This means that even small conda environments can run into quota issues rather quickly.</p> <p>To combat this, we recommend setting up your conda environment in a separate directory. You can do this with the <code>--prefix</code> command.</p> <p>For example:</p> <pre><code>conda create --prefix /projects/m223813/mycondadir numpy=1.21\n</code></pre> <p>The above will create a new conda environment in the <code>/projects/m223813/mycondadir</code> folder with numpy 1.21. Since it's not being installed into your home directory, you don't have to worry about the same 15GB quota as before!</p> <p>You can also use the <code>--prefix</code> argument with <code>conda env</code> and other commands.</p>"},{"location":"modules/cudnn/","title":"CuDNN","text":"<p>CuDNN is a library provided by Nvidia. More information on it can be found here: https://developer.nvidia.com/cudnn</p> <p>There are currently three versions of CuDNN available on Marlowe:</p> <pre><code>cudnn/cuda11/9.3.0.75\ncudnn/cuda12/9.3.0.75\ncudnn/cuda12/8.9.7.29\n</code></pre> <p>To load CuDNN, run the following:</p> <pre><code>module load cudnn/cuda12\n</code></pre>"},{"location":"modules/nvhpc/","title":"Nvidia HPC SDK","text":"<p>The Nvidia HPC SDK provides tools such as <code>nvcc</code> to the end user.</p> <p>Find out more here</p> <p>To load the Nvidia HPC SDK, run the following:</p> <pre><code>module load nvhpc\n</code></pre>"}]}